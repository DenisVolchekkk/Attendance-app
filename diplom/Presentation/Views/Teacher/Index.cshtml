@{
    var authToken = Context?.Request?.Cookies["AuthToken"];
    var email = string.Empty;
    var roles = new List<string>();
    var isAuthSuccessful = false;

    if (!string.IsNullOrEmpty(authToken))
    {
        var handler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();
        var jwtToken = handler.ReadJwtToken(authToken);
        email = jwtToken.Claims.FirstOrDefault(c => c.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name")?.Value;
        roles = jwtToken.Claims
            .Where(c => c.Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/role")
            .Select(c => c.Value)
            .ToList();
        isAuthSuccessful = true;
    }
}
@model PaginatedList<Domain.Models.Teacher>

@{
    ViewData["Title"] = "Index";
}

<h1>Преподаватели</h1>

<p>
    <a asp-action="Create">Создать</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <input type="text" placeholder="Преподаватель" name="SearchTeacherName" value="@ViewData["SearchTeacherName"]" />
            <input type="submit" value="Поиск" class="btn btn-default" /> |
            <a asp-action="Index">Вернуться к полному списку</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>Учитель</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>
                    <a asp-controller="Schedule" asp-action="TeacherSchedule" asp-route-teacherId="@item.Id">Расписание</a>
                    @if (roles.Any(r => r != "Chief" && r != "Teacher"))
                    {
                        @Html.ActionLink("Обновить", "Edit", new { id = item.Id })
                        @Html.ActionLink("Удалить", "Delete", new { id = item.Id })
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-SearchTeacherName="@ViewData["SearchTeacherName"]"
       class="@(!Model.HasPreviousPage ? "disabled" : "")">
        Предыдущая
    </a>

    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-SearchTeacherName="@ViewData["SearchTeacherName"]"
       class="@(!Model.HasNextPage ? "disabled" : "")">
        Следующая
    </a>
</div>
